@mixin cover_img {
	display: block;
	width: 100%;
	height: 100%;

	object-fit: cover;
}

@mixin contain_img {
	display: block;
	width: 100%;
	height: 100%;

	object-fit: contain;
}

@mixin scale_out_hover($hover: false) {
	transform: scale(1.06);
	transition: transform $base_transition;
	will-change: transform;

	@if ($hover) {

		#{$hover}:hover &,
		#{$hover}:focus & {
			transform: scale(1);
		}
	}
}

@mixin overflow_text($line) {
	display: -webkit-box;
	overflow: hidden;
	text-overflow: ellipsis;

	-webkit-line-clamp: $line;
	-webkit-box-orient: vertical;
}

// header
@mixin header_title {
	@include mobile_header_border;

	font-family: inherit;
	text-decoration: none;

	@include bp($tablet_max, min) {
		@include h5;
		font-weight: 500;
		line-height: 1.2;
		color: var(--dark-2);
	}

	@include bp($tablet_max - 1) {
		@include mobile_header_link;
	}

	&:not(:last-child) {
		@include bp($tablet_max, min) {
			margin-bottom: 1.4rem;
		}
	}
}

// link

@mixin mobile_header_link {
	position: relative;

	display: flex;
	align-items: center;
	gap: 2rem;
	width: 100%;
	padding: 1.2rem var(--gl-hr-indent);

	font-size: 1.8rem;
	color: inherit;
	text-decoration: none;
}

@mixin mobile_header_border {
	&::after {
		@include bp($tablet_max - 1) {
			content: '';
			position: absolute;
			left: 0;

			width: 100%;
			height: 1px;
			bottom: 0;

			background-color: var(--dark-4);
			opacity: 0.1;
		}
	}
}

@mixin mobile_header_active_link {
	color: var(--light);
	background-color: var(--accent);
	pointer-events: none;
}

// icon

@mixin mobile_header_icon {
	width: 1.8rem;
	height: 1.8rem;
	margin-left: auto;

	flex-shrink: 0;

	transform: rotate(-90deg);
	color: var(--dark);

	@include bp($tablet_max, min) {
		display: none;
	}

	@include bp($tablet_max - 1) {
		display: block;
	}
}

@mixin st_sanitaized {
	strong {
		font-weight: 600;
	}

	em {
		font-style: italic;
	}

	u {
		text-decoration: underline;
	}

	ul {
		@include bp($tablet_min, min) {
			padding-left: 1.4rem;
		}

		@include bp($tablet_min - 1) {
			padding-left: .6rem;
		}

		li {
			position: relative;
			padding-left: 1.6rem;

			&::before {
				content: '';
				position: absolute;
				top: .8rem;
				left: 0;

				width: .4rem;
				height: .4rem;
				border-radius: 50%;
				background-color: currentColor;
			}
		}
	}

	ol {

		counter-reset: counter;

		@include bp($tablet_min, min) {
			padding-left: .6rem;
		}

		@include bp($tablet_min - 1) {
			padding-left: 2px;
		}

		li {
			position: relative;

			@include bp($tablet_min, min) {
				padding-left: 2.4rem;
			}

			@include bp($tablet_min - 1) {
				padding-left: 2rem;
			}

			&::before {
				counter-increment: counter;
				content: counter(counter)".";
				position: absolute;
				top: 0;
				left: 0;

				color: inherit;
			}
		}
	}
}

@mixin flex_width($count, $gap) {
	width: calc((100% - (#{$count} - 1) * #{$gap}) / #{$count});
}

@mixin default_slider_body {
	position: relative;

	&:not(:last-child) {
		@include bp($tablet_max - 1) {
			margin-bottom: 1rem;
		}
	}
}

@mixin default_slider {
	@include bp($tablet_max, min) {
		margin: -1.8rem -.9rem;
	}

	@include bp($tablet_max - 1) {
		margin: -1.2rem -.6rem;
	}

	@include bp($desktop_min - 1) {
		overflow: visible !important;
	}
}

@mixin default_slide {
	width: max(20%, 18rem) !important;
	height: auto !important;


	@include bp($tablet_max, min) {
		padding: 1.8rem .9rem;
	}

	@include bp($tablet_max - 1) {
		padding: 1.2rem .6rem;
	}
}

@mixin default_pagination {
	@include bp($tablet_max, min) {
		display: none;
	}
}

@mixin default_arrow {
	@include bp($tablet_max - 1) {
		display: none !important;
	}
}

@mixin st_tabs {
	will-change: height, transform, opacity;
	transform: translateZ(0);
	backface-visibility: hidden;
}

@mixin accordion_max_height {
	overflow: hidden;
	transition: max-height $base_transition, opacity $base_transition;
	will-change: max-height;
	max-height: 0;
	opacity: 0;

	&.open {
		opacity: 1;
	}
}

@mixin link_hover_effect($font-size: 1.8rem) {
	position: relative;

	display: inline-block;

	font-size: $font-size;
	color: inherit;
	text-decoration: none;
	transition: color $base_transition, background $base_transition;

	&::after {
		content: '';
		position: absolute;
		left: 0;
		width: 100%;
		height: 1px;

		@include bp($tablet_max, min) {
			bottom: 2px;
			transform: scaleX(0);
			background-color: var(--accent);
			transition: transform $base_transition;
			transform-origin: left;
		}

		@include bp($tablet_max - 1) {
			bottom: 0;
			background-color: var(--dark-4);
			opacity: 0.1;
		}
	}

	@media (any-hover: hover) {
		&:hover {
			color: var(--accent);

			&::after {
				@include bp($tablet_max, min) {
					transform: scaleX(1);
				}
			}
		}
	}

	.active & {
		@include bp($tablet_max, min) {
			color: var(--accent);

			&::after {
				transform: scaleX(1);
			}
		}
	}
}